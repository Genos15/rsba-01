type Query {

    #------------------------ orders -------------------------
    retrieveOrders (first: Int!, after: ID, status: OrderStatus, layer: OrderLayer): OrderConnection @connection(for: "Order")
    searchOrders (input: String!, first: Int!, after: ID, status: OrderStatus, layer: OrderLayer): OrderConnection @connection(for: "Order")
    findOrder (input: ID!): Order
    retrieveOrderItems (id: ID!, first: Int!, after: ID): ItemConnection @connection(for: "Item")
    retrieveOrderTasks (id: ID!, first: Int!, after: ID): TaskConnection @connection(for: "Task")
    retrieveOrderTechnologies (id: ID!, first: Int!, after: ID): TechnologyConnection @connection(for: "Technology")
    retrieveOrderParameters (id: ID!, first: Int!, after: ID): ParameterConnection @connection(for: "Parameter")
    retrieveOrderCategories (id: ID!, first: Int!, after: ID): ItemCategoryConnection @connection(for: "ItemCategory")
    retrieveOrderWorklogs (id: ID!, first: Int!, after: ID): WorklogConnection @connection(for: "Worklog")
    #    findOrderCustomer (id: ID!): Customer
    #    findOrderManager (id: ID!): Agent
    findOrderAgent(id: ID!): Agent
    findOrderType(id: ID!): OrderType
    countOrders(status: OrderStatus): Int



    #------------ customer ----------------
    retrieveCustomers (first: Int!, after: ID): CustomerConnection @connection(for: "Customer")
    findCustomer(input: ID!): Technology
    countCustomers: Int
    searchCustomers (input: String!, first: Int!, after: ID): CustomerConnection @connection(for: "Customer")
    retrieveCustomerEntities(id: ID!, first: Int!, after: ID): CustomerConnection @connection(for: "Customer")

}