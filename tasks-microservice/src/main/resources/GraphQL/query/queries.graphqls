type Query {

    #------------ tasks ----------------
    retrieveTasks (first: Int!, after: ID, status: TaskStatus, layer: TaskLayer, id: ID, rangeStart: DateTime, rangeEnd: DateTime): TaskConnection @connection(for: "Task")
    findTask(input: ID!): Task
    countTasks(status: TaskStatus, layer: TaskLayer, id: ID): Int
    searchTasks (input: String!, first: Int!, after: ID, status: TaskStatus, layer: TaskLayer, id: ID, rangeStart: DateTime, rangeEnd: DateTime): TaskConnection @connection(for: "Task")
    findTaskOrder (id: ID!): Order
    findTaskItem (id: ID!): Item
    findTaskOperation (id: ID!): Operation
    findTaskWorkcenter (id: ID!): Workcenter
    retrieveTaskUsers (id: ID!, first: Int!, after: ID): UserConnection @connection(for: "User")
    retrieveTaskComments (id: ID!, first: Int!, after: ID): CommentConnection @connection(for: "Comment")


    #------------ task_set ----------------
    retrieveTaskSets (first: Int!, after: ID, rangeStart: DateTime, rangeEnd: DateTime, id: ID): TaskSetConnection @connection(for: "TaskSet")
    findTaskSet(input: ID!): TaskSet
    countTaskSets: Int
    retrieveTaskSetUsers (id: ID!, first: Int!, after: ID): UserConnection @connection(for: "User")
    retrieveTaskSet_Tasks (id: ID!, first: Int!, after: ID): TaskConnection @connection(for: "Task")
    retrieveTaskSetComments (id: ID!, first: Int!, after: ID): CommentConnection @connection(for: "Comment")


    #------------ comment ----------------
    findCommentReporter (id: ID!): User
}